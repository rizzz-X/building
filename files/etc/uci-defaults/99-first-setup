#!/bin/sh

# ENV
exec > /root/firs-setup.log 2>&1

echo "Setting permission..."
chmod +x /sbin/repair_ro
chmod +x /etc/init.d/repair_ro
chmod +x /usr/bin/repair_ro
echo "Adding to startup..."
/etc/init.d/repair_ro enable
chmod +x /www/vnstati/vnstati.sh
echo "Success!"

msg() {
    local DATE=$(date '+%d %B %Y %T')
    echo "[ INFO FIRST SETUP ] $1"
    logger -p "notice" "[ INFO FIRST SETUP ] $1"
}

# Set All permission files
msg "Set All permission files"
check_permission() {
    local DIR=${1:-.}

    find "$DIR" -type f | while read file; do
        if file "$file" | grep -q "executable"; then
            if [ ! -x "$file" ]; then
                msg "File requiring chmod +x: $file"
                chmod +x "$file"
            fi
        fi
    done
}

check_permission "/etc/init.d"
check_permission "/etc/mihomo"
check_permission "/etc/openclash"
check_permission "/lib/netifd"
check_permission "/lib/wifi"
check_permission "/sbin"
check_permission "/usr/bin"

# dont remove!
msg "Installed Time: $(date '+%A, %d %B %Y %T')"
msg "###############################################"
msg "Processor: $(ubus call system board | grep '\"system\"' | sed 's/ \+/ /g' | awk -F'\"' '{print $4}')"
msg "Device Model: $(ubus call system board | grep '\"model\"' | sed 's/ \+/ /g' | awk -F'\"' '{print $4}')"
msg "Device Board: $(ubus call system board | grep '\"board_name\"' | sed 's/ \+/ /g' | awk -F'\"' '{print $4}')"
sed -i "s#_('Firmware Version'),(L.isObject(boardinfo.release)?boardinfo.release.description+' / ':'')+(luciversion||''),#_('Firmware Version'),(L.isObject(boardinfo.release)?boardinfo.release.description+' build by RTA-WRT [ Ouc3kNF6 ]':''),#g" /www/luci-static/resources/view/status/include/10_system.js
sed -i -E "s|icons/port_%s.png|icons/port_%s.gif|g" /www/luci-static/resources/view/status/include/29_ports.js
sed -i 's/\[ -f \/etc\/banner \] && cat \/etc\/banner/#&/' /etc/profile
sed -i 's/\[ -n "$FAILSAFE" \] && cat \/etc\/banner.failsafe/#&/' /etc/profile
#sed -i '1i source /usr/share/oh-my-bash/.bashrc' /etc/profile
if grep -q "ImmortalWrt" /etc/openwrt_release; then
  sed -i "s/\(DISTRIB_DESCRIPTION='ImmortalWrt [0-9]*\.[0-9]*\.[0-9]*\).*'/\1'/g" /etc/openwrt_release
  sed -i -E "s|services/ttyd|system/ttyd|g" /usr/share/ucode/luci/template/themes/material/header.ut
  sed -i -E "s|services/ttyd|system/ttyd|g" /usr/lib/lua/luci/view/themes/argon/header.htm
  msg Branch version: "$(grep 'DISTRIB_DESCRIPTION=' /etc/openwrt_release | awk -F"'" '{print $2}')"
elif grep -q "OpenWrt" /etc/openwrt_release; then
  sed -i "s/\(DISTRIB_DESCRIPTION='OpenWrt [0-9]*\.[0-9]*\.[0-9]*\).*'/\1'/g" /etc/openwrt_release
  msg Branch version: "$(grep 'DISTRIB_DESCRIPTION=' /etc/openwrt_release | awk -F"'" '{print $2}')"
fi
msg "###############################################"

# Set hostname and Timezone to Asia/Jakarta
msg "Setup NTP Server and Time Zone to Asia/Jakarta"
uci set system.@system[0].hostname='RTA-WRT'
uci set system.@system[0].timezone='WIB-7'
uci set system.@system[0].zonename='Asia/Jakarta'
uci -q delete system.ntp.server
uci add_list system.ntp.server="pool.ntp.org"
uci add_list system.ntp.server="id.pool.ntp.org"
uci add_list system.ntp.server="time.google.com"
uci commit system

# configure wan interface
msg "Setup WAN and LAN Interface"
uci set network.lan.ipaddr="192.168.1.1"
uci set network.lan.delegate='0'
uci set network.wan=interface
uci set network.wan.proto='dhcp'
uci set network.wan.device='eth1'
uci set network.wan1=interface
uci set network.wan1.proto='dhcp'
uci set network.wan1.device='eth2'
uci set network.wan2=interface
uci set network.wan2.proto='dhcp'
uci set network.wan2.device='eth3'
uci set network.mm=interface 
uci set network.mm.proto='modemmanager'
uci set network.mm.apn='internet'
uci set network.mm.auth='none'
uci set network.mm.iptype='ipv4'
uci set network.mm.force_connection='1'
uci -q delete network.wan6
uci commit network
uci set firewall.@zone[1].network='wan wan1 wan2 mm'
uci commit firewall

# configure ipv6
uci -q delete dhcp.lan.dhcpv6
uci -q delete dhcp.lan.ra
uci -q delete dhcp.lan.ndp
uci -q delete dhcp.lan.ra_slaac
uci -q delete dhcp.lan.ra_flags
uci -q delete dhcp.lan.max_preferred_lifetime
uci -q delete dhcp.lan.max_valid_lifetime
uci commit dhcp
uci set network.lan.delegate='0'
uci del network.lan.ip6assign
uci commit network

# configure WLAN
msg "Setup Wireless if available"
uci set wireless.@wifi-device[0].disabled='0'
uci set wireless.@wifi-iface[0].disabled='0'
uci set wireless.@wifi-iface[0].encryption='none'
uci set wireless.@wifi-device[0].country='ID'
if grep -q "Raspberry Pi 4\|Raspberry Pi 3" /proc/cpuinfo; then
  uci set wireless.@wifi-iface[0].ssid='RTA-WRT_5g'
  uci set wireless.@wifi-device[0].channel='149'
  uci set wireless.radio0.htmode='HT40'
  uci set wireless.radio0.band='5g'
else
  uci set wireless.@wifi-iface[0].ssid='RTA-WRT_2g'
  uci set wireless.@wifi-device[0].channel='1'
  uci set wireless.@wifi-device[0].band='2g'
fi
uci commit wireless
wifi reload && wifi up
if iw dev | grep -q Interface; then
  if grep -q "Raspberry Pi 4\|Raspberry Pi 3" /proc/cpuinfo; then
    if ! grep -q "wifi up" /etc/rc.local; then
      sed -i '/exit 0/i # remove if you dont use wireless' /etc/rc.local
      sed -i '/exit 0/i sleep 10 && wifi up' /etc/rc.local
    fi
    if ! grep -q "wifi up" /etc/crontabs/root; then
      echo "# remove if you dont use wireless" >> /etc/crontabs/root
      echo "0 */12 * * * wifi down && sleep 5 && wifi up" >> /etc/crontabs/root
      service cron restart
    fi
  fi
else
  msg "No wireless device detected."
fi

# Configure Password Login OpenWrt
msg "Configure Password Login OpenWrt"
(echo "root"; sleep 1; echo "root") | passwd > /dev/null


# Add Custom Repo and Disable opkg signature check
msg "Add Custom Repo and Disable opkg signature check"
sed -i 's/option check_signature/# option check_signature/g' /etc/opkg.conf
echo "src/gz custom_arch https://dl.openwrt.ai/latest/packages/$(grep "OPENWRT_ARCH" /etc/os-release | awk -F '"' '{print $2}')/kiddin9" >> /etc/opkg/customfeeds.conf

# Remove login password required when accessing terminal
msg "Remove login password required when accessing terminal"
uci set ttyd.@ttyd[0].command='/bin/bash --login'
uci commit ttyd


# Remove huawei me909s usb-modeswitch
msg "Remove huawei me909s usb-modeswitch"
sed -i -e '/12d1:15c1/,+5d' /etc/usb-mode.json

# Remove dw5821e usb-modeswitch
msg "Remove dw5821e usb-modeswitch"
sed -i -e '/413c:81d7/,+5d' /etc/usb-mode.json

msg "Remove Thales MV31-W T99W175 usb-modeswitch"
sed -i -e '/1e2d:00b3/,+5d' /etc/usb-mode.json

# Disable /etc/config/xmm-modem
msg "Disable /etc/config/xmm-modem"
uci set xmm-modem.@xmm-modem[0].enable='0'
uci commit xmm-modem


# Setup Nlbwmon Database Dir
msg "Setup Nlbwmon Database Dir"
uci set nlbwmon.@nlbwmon[0].database_directory='/etc/nlbwmon'
uci set nlbwmon.@nlbwmon[0].commit_interval='3h'
uci set nlbwmon.@nlbwmon[0].refresh_interval='60s'
uci commit nlbwmon
bash /etc/init.d/nlbwmon restart


# Setup Auto Vnstat Database Backup
msg "Setup Auto Vnstat Database Backup"
sed -i 's/;DatabaseDir "\/var\/lib\/vnstat"/DatabaseDir "\/etc\/vnstat"/' /etc/vnstat.conf
mkdir -p /etc/vnstat
chmod +x /etc/init.d/vnstat_backup
bash /etc/init.d/vnstat_backup enable


# Setup PHP
msg "Setup PHP"
msg "system not using php-cgi, patching php config ..."
uci set uhttpd.main.ubus_prefix='/ubus'
uci set uhttpd.main.interpreter='.php=/usr/bin/php-cgi'
uci set uhttpd.main.index_page='cgi-bin/luci'
uci add_list uhttpd.main.index_page='index.html'
uci add_list uhttpd.main.index_page='index.php'
uci commit uhttpd
sed -i -E "s|memory_limit = [0-9]+M|memory_limit = 100M|g" /etc/php.ini
sed -i -E "s|display_errors = On|display_errors = Off|g" /etc/php.ini
ln -s /usr/bin/php-cli /usr/bin/php
[ -d /usr/lib/php8 ] && [ ! -d /usr/lib/php ] && ln -sf /usr/lib/php8 /usr/lib/php
msg "patching system with php configuration done ..."
msg "restarting uhttpd ..."
/etc/init.d/uhttpd restart


# Setting Tinyfm
msg "Setting Tinyfm"
ln -s / /www/tinyfm/rootfs


# Configurating OpenClash
msg "Configurating OpenClash"
bash /usr/bin/patchoc.sh
sed -i '/exit 0/i #/usr/bin/patchoc.sh' /etc/rc.local
ln -s /etc/openclash/history/config-wrt.db /etc/openclash/cache.db
ln -s /etc/openclash/core/clash_meta  /etc/openclash/clash


# Set Openclash Config
msg "Set Openclash Config"
if [ -f "/etc/config/openclash" ]; then
  rm -rf /etc/config/openclash
  mv /etc/config/openclash1 /etc/config/openclash
else
  mv /etc/config/openclash1 /etc/config/openclash
fi

# set argon as default theme
msg "set argon as default theme"
uci set luci.main.mediaurlbase='/luci-static/argon' && uci commit

if [ -f "/etc/profile.d/30-sysinfo.sh" ]; then
  rm -rf /etc/profile.d/30-sysinfo.sh
  mv /etc/profile.d/30-sysinfo.sh-bak /etc/profile.d/30-sysinfo.sh
else
  mv /etc/profile.d/30-sysinfo.sh-bak /etc/profile.d/30-sysinfo.sh
fi

# Log success
msg "First Setup settings successfully applied..."

# Adjust Settings

# Remove this script after successful execution
rm -f /etc/uci-defaults/$(basename $0)
/etc/init.d/system restart
exit 0
